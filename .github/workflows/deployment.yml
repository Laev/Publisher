# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Deployment

on:
  push:
    tags:
      - "v*"

jobs:
  macBuildAndRelease:
    strategy:
      matrix:
        os: [macos-latest]
        # os: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Use Node.js 14
        uses: actions/setup-node@v3
        with:
          node-version: 14.x

      - name: Make .env file
        run: |
          touch env/.env
          echo AUTH_PRIVATEKEY=${{secrets.AUTH_PRIVATEKEY}} >> env/.env
          echo AUTH_INSIDEDEVELOPERUSERGROUP_ARRAY=${{secrets.AUTH_INSIDEDEVELOPERUSERGROUP_ARRAY}} >> env/.env
          echo AUTH_INSIDEPASSWORD=${{secrets.AUTH_INSIDEPASSWORD}} >> env/.env
          echo AUTH_INSIDEPMUSERGROUP_ARRAY=${{secrets.AUTH_INSIDEPMUSERGROUP_ARRAY}} >> env/.env
          echo JENKINS_BASEURL=${{secrets.JENKINS_BASEURL}} >> env/.env
          echo JENKINS_USERNAME=${{secrets.JENKINS_USERNAME}} >> env/.env
          echo JENKINS_PASSWORD=${{secrets.JENKINS_PASSWORD}} >> env/.env
          echo GITLAB_HOST=${{secrets.GITLAB_HOST}} >> env/.env
          echo GITLAB_BASEURL=${{secrets.GITLAB_BASEURL}} >> env/.env
          echo GITLAB_USERNAME=${{secrets.GITLAB_USERNAME}} >> env/.env
          echo GITLAB_PASSWORD=${{secrets.GITLAB_PASSWORD}} >> env/.env
          echo GITLAB_PRIVATE_TOKEN=${{secrets.GITLAB_PRIVATE_TOKEN}} >> env/.env
          echo SONARQUBE_SERVER=${{secrets.SONARQUBE_SERVER}} >> env/.env
          echo SONARQUBE_USERNAME=${{secrets.SONARQUBE_USERNAME}} >> env/.env
          echo SONARQUBE_PASSWORD=${{secrets.SONARQUBE_PASSWORD}} >> env/.env
          echo SONARQUBE_TOKEN=${{secrets.SONARQUBE_TOKEN}} >> env/.env
          echo ALIYUN_REGIONID=${{secrets.ALIYUN_REGIONID}} >> env/.env
          echo ALIYUN_ACCESSKEYID=${{secrets.ALIYUN_ACCESSKEYID}} >> env/.env
          echo ALIYUN_ACCESSKEYSECRET=${{secrets.ALIYUN_ACCESSKEYSECRET}} >> env/.env
          echo DEF_MAIL_ADDRESSEE=${{secrets.DEF_MAIL_ADDRESSEE}} >> env/.env
          echo DEF_MAIL_SENDER_USER=${{secrets.DEF_MAIL_SENDER_USER}} >> env/.env
          echo DEF_MAIL_SENDER_PASS=${{secrets.DEF_MAIL_SENDER_PASS}} >> env/.env
          echo PMLIST_ARRAY=${{secrets.PMLIST_ARRAY}} >> env/.env
          echo ENVTYPES_ARRAY=${{secrets.ENVTYPES_ARRAY}} >> env/.env


      - name: Install Dependencies
        run: yarn install

      - name: Build
        run: yarn electron:build

      - name: Release
        run: yarn electron:release

  winBuildAndRelease:
    strategy:
      matrix:
        os: [macos-latest]

    runs-on: ${{ matrix.os }}

    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Use Node.js 14
        uses: actions/setup-node@v3
        with:
          node-version: 14.x

      - name: Make .env file
        run: |
          touch env/.env
          echo AUTH_PRIVATEKEY=${{secrets.AUTH_PRIVATEKEY}} >> env/.env
          echo AUTH_INSIDEDEVELOPERUSERGROUP_ARRAY=${{secrets.AUTH_INSIDEDEVELOPERUSERGROUP_ARRAY}} >> env/.env
          echo AUTH_INSIDEPASSWORD=${{secrets.AUTH_INSIDEPASSWORD}} >> env/.env
          echo AUTH_INSIDEPMUSERGROUP_ARRAY=${{secrets.AUTH_INSIDEPMUSERGROUP_ARRAY}} >> env/.env
          echo JENKINS_BASEURL=${{secrets.JENKINS_BASEURL}} >> env/.env
          echo JENKINS_USERNAME=${{secrets.JENKINS_USERNAME}} >> env/.env
          echo JENKINS_PASSWORD=${{secrets.JENKINS_PASSWORD}} >> env/.env
          echo GITLAB_HOST=${{secrets.GITLAB_HOST}} >> env/.env
          echo GITLAB_BASEURL=${{secrets.GITLAB_BASEURL}} >> env/.env
          echo GITLAB_USERNAME=${{secrets.GITLAB_USERNAME}} >> env/.env
          echo GITLAB_PASSWORD=${{secrets.GITLAB_PASSWORD}} >> env/.env
          echo GITLAB_PRIVATE_TOKEN=${{secrets.GITLAB_PRIVATE_TOKEN}} >> env/.env
          echo SONARQUBE_SERVER=${{secrets.SONARQUBE_SERVER}} >> env/.env
          echo SONARQUBE_USERNAME=${{secrets.SONARQUBE_USERNAME}} >> env/.env
          echo SONARQUBE_PASSWORD=${{secrets.SONARQUBE_PASSWORD}} >> env/.env
          echo SONARQUBE_TOKEN=${{secrets.SONARQUBE_TOKEN}} >> env/.env
          echo ALIYUN_REGIONID=${{secrets.ALIYUN_REGIONID}} >> env/.env
          echo ALIYUN_ACCESSKEYID=${{secrets.ALIYUN_ACCESSKEYID}} >> env/.env
          echo ALIYUN_ACCESSKEYSECRET=${{secrets.ALIYUN_ACCESSKEYSECRET}} >> env/.env
          echo DEF_MAIL_ADDRESSEE=${{secrets.DEF_MAIL_ADDRESSEE}} >> env/.env
          echo DEF_MAIL_SENDER_USER=${{secrets.DEF_MAIL_SENDER_USER}} >> env/.env
          echo DEF_MAIL_SENDER_PASS=${{secrets.DEF_MAIL_SENDER_PASS}} >> env/.env
          echo PMLIST_ARRAY=${{secrets.PMLIST_ARRAY}} >> env/.env
          echo ENVTYPES_ARRAY=${{secrets.ENVTYPES_ARRAY}} >> env/.env

      - name: Install Dependencies
        run: yarn install

      - name: Build
        run: yarn electron:win-build

      - name: Release
        run: yarn electron:win-release
